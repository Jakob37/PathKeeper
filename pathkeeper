#!/usr/bin/env python

import sqlite3
import argparse
import time


def main():
    args = parse_arguments()

    if args.subcommand == "add":
        add_path(args.path, args.label)

    if args.subcommand == "list":
        # con = sqlite3.connect("test.db")
        list_all_paths("test.db")


# https://docs.python.org/3/library/sqlite3.html
def add_path(path: str, label: str = ""):
    my_id = time.time_ns()
    con = sqlite3.connect("test.db")
    cur = con.cursor()
    cur.execute(f"INSERT INTO path VALUES ('{my_id}', '{label}', '{path}')")
    con.commit()


def list_all_paths(db: str):
    con = sqlite3.connect("test.db")
    cur = con.cursor()
    res = con.execute("SELECT * FROM path")
    for row in res.fetchall():
        label = row[1]
        path = row[2]
        print(f"{path}\t{label}")


def parse_arguments() -> any:
    parser = argparse.ArgumentParser()

    sub_parsers = parser.add_subparsers(dest="subcommand", required=True)

    add = sub_parsers.add_parser("add", help="Add new path")
    add.add_argument("path")
    add.add_argument("--label")

    remove = sub_parsers.add_parser("remove", help="Remove path")

    list_paths = sub_parsers.add_parser("list", help="List paths")
    # list_paths.add_argument('')

    goto = sub_parsers.add_parser("goto", help="Go to path")
    goto.add_argument("path", help="Path")
    # parser_crazy.add_argument('--fool', action='store_const', const=True, help='it is foolish option')

    args = parser.parse_args()

    return args


if __name__ == "__main__":
    main()
